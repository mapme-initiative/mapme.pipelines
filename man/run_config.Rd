% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run_config}
\alias{run_config}
\title{Run a MAPME analysis pipeline}
\usage{
run_config(config)
}
\arguments{
\item{config}{Path to a \code{yaml} configuration file (see Details below)}
}
\description{
Analysis pipelines are configured using a YAML configuration file.
Its contents will be checked for validity before running any calculations.
Resources/indicators top-level objects are their respective function calls
(e.g. \verb{get_*}/\verb{calc_*}) with optional sub-objects \code{args} (defining the
respective function's arguments) and \code{options} (see Details below).
}
\details{
The required objects are:
\itemize{
\item input: A character pointing to a existing GDAL-readable vector data source
\item output: A character pointing to a non-existing GPGK (unless the overwrite option is set to TRUE)
\item datadir: A character pointing to a GDAL-writable path prefix
\item resources: At least a single resource \verb{get_*()} function has to be defined with
possible \code{args} and \code{options} objects
\item indicators: At least a single indicator \verb{calc_*()} function has to be defined with
possible \code{args} and \code{options} objects
}

Optional objects are:
\itemize{
\item batchsize: Integer value indicating the batchsize with which \code{input} is sliced
into equally sized batches for processing (default: 10,000)
\item options: An options object set as global options. Each resource/indicator
object can also be supplied with an \code{options} object to have finer control
}

The following values can be set in \code{options}:
\itemize{
\item overwrite: logical, indicating if existing outputs should be overwritten (default: false)
\item progress: logical, indicating if progress is to be reported (default: false)
\item maxcores: integer, maximum number of cores for parallel processing (default: 1)
\item chunksize: numeric, indicating the value for \code{mapme.biodiversity::mapme_options()}
\code{chunk_size} argument
\item backend: charachter, either \code{multisession} or \code{multicore}, defining the
used parallel backend. Defaults to \code{multisession} on Windows and interactive sessions,
\code{multicore} otherwise
}
}
